/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './__root'
import { Route as ExploreRouteImport } from './explore'
import { Route as IndexRouteImport } from './index'
import { Route as EditorIndexRouteImport } from '../explore
import { Route as ToolsToolNameRouteImport } from './tools/$toolName'

const ExploreRoute = ExploreRouteImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EditorIndexRoute = EditorIndexRouteImport.update({
  id: '/editor/',
  path: '/editor/',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsToolNameRoute = ToolsToolNameRouteImport.update({
  id: '/tools/$toolName',
  path: '/tools/$toolName',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/explore': typeof ExploreRoute
  '/tools/$toolName': typeof ToolsToolNameRoute
  '/editor': typeof EditorIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/explore': typeof ExploreRoute
  '/tools/$toolName': typeof ToolsToolNameRoute
  '/editor': typeof EditorIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/explore': typeof ExploreRoute
  '/tools/$toolName': typeof ToolsToolNameRoute
  '/editor/': typeof EditorIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/explore' | '/tools/$toolName' | '/editor'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/explore' | '/tools/$toolName' | '/editor'
  id: '__root__' | '/' | '/explore' | '/tools/$toolName' | '/editor/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExploreRoute: typeof ExploreRoute
  ToolsToolNameRoute: typeof ToolsToolNameRoute
  EditorIndexRoute: typeof EditorIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/explore': {
      id: '/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/editor/': {
      id: '/editor/'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof EditorIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/$toolName': {
      id: '/tools/$toolName'
      path: '/tools/$toolName'
      fullPath: '/tools/$toolName'
      preLoaderRoute: typeof ToolsToolNameRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExploreRoute: ExploreRoute,
  ToolsToolNameRoute: ToolsToolNameRoute,
  EditorIndexRoute: EditorIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
